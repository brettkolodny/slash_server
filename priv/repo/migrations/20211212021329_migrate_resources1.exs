defmodule SlashServer.Repo.Migrations.MigrateResources1 do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:command_group, primary_key: false) do
      add :id, :uuid, null: false, primary_key: true
      add :name, :text, null: false
      add :description, :text, null: false
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
    end

    create unique_index(:command_group, [:name], name: "command_group_unique_name_index")

    create table(:command, primary_key: false) do
      add :command_id, :uuid, null: false, primary_key: true
      add :name, :text, null: false
      add :description, :text, null: false
      add :response, :text, null: false
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :command_group_id,
          references(:command_group,
            column: :id,
            name: "command_command_group_id_fkey",
            type: :uuid
          )
    end

    create unique_index(:command, [:name], name: "command_unique_name_index")
  end

  def down do
    drop_if_exists unique_index(:command, [:name], name: "command_unique_name_index")

    drop constraint(:command, "command_command_group_id_fkey")

    drop table(:command)

    drop_if_exists unique_index(:command_group, [:name], name: "command_group_unique_name_index")

    drop table(:command_group)
  end
end